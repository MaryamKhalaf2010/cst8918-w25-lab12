name: Terraform Static Tests & Deployment (dev)

on:
  push:
    branches:
      - '**'  # Runs on push to any branch
    paths:
      - 'infra/tf-app/**'  # Only trigger if Terraform files change

jobs:
  static-tests:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # For OIDC
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0  # Adjust to your version

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: latest

      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Init
        working-directory: infra/tf-app
        run: terraform init -backend-config="storage_account_name=${{ secrets.TF_STATE_STORAGE_ACCOUNT }}"  # Assumes secret for storage account

      - name: Terraform Format Check
        working-directory: infra/tf-app
        run: terraform fmt -check -recursive

      - name: Terraform Validate
        working-directory: infra/tf-app
        run: terraform validate

      - name: TFLint
        working-directory: infra/tf-app
        run: tflint --init && tflint -f compact

      - name: Terraform Plan
        working-directory: infra/tf-app
        run: terraform plan -input=false -out=tfplan

      - name: Upload Terraform Plan Artifact
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan
          path: infra/tf-app/tfplan

  deploy:
    if: github.ref == 'refs/heads/dev'
    needs: static-tests
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Init
        working-directory: infra/tf-app
        run: terraform init -backend-config="storage_account_name=${{ secrets.TF_STATE_STORAGE_ACCOUNT }}"

      - name: Terraform Apply (dev only)
        working-directory: infra/tf-app
        run: terraform apply -auto-approve tfplan

      - name: Show Terraform Outputs
        working-directory: infra/tf-app
        run: terraform output
